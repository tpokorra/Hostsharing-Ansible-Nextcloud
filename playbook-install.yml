---
- hosts: nextcloud
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp

  tasks:
  - name: Create user, domain and database
    import_tasks: tasks/hs_basis.yml

  #################################
  ## create directories
  #################################
  - name: create directory nextcloud
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/nextcloud"
      state: directory
  - name: create directory bin
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/bin"
      state: directory
  - name: create directory etc
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory var/tmp
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory

  ##################################
  ## install nextcloud
  ##################################
  - name: install nextcloud
    become: yes
    become_user: "{{pac}}-{{user}}"
    unarchive:
      src: https://download.nextcloud.com/server/releases/nextcloud-{{nextcloud_version}}.tar.bz2
      remote_src: yes
      dest: /home/pacs/{{pac}}/users/{{user}}/nextcloud
      extra_opts: [--strip-components=1]
      creates: /home/pacs/{{pac}}/users/{{user}}/nextcloud/config

  #################################
  ## setup the data directory
  #################################
  - name: Check for HDD storage
    stat:
      path: /home/storage/{{pac}}/users/{{user}}
    register: hdd_storage
  - name: create data directory on storage
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/storage/{{pac}}/users/{{user}}/data"
      state: directory
      mode: 0744
      recurse: no
    when: hdd_storage.stat.exists

  - name: create symbolic link for data to storage
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/storage/{{pac}}/users/{{user}}/data"
      dest: "/home/pacs/{{pac}}/users/{{user}}/data"
      state: link
    when: hdd_storage.stat.exists

  - name: create data directory on ssd
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/data"
      state: directory
      mode: 0744
      recurse: no
    when: not hdd_storage.stat.exists

  - name: configure hdd data directory path
    become: yes
    become_user: "{{pac}}-{{user}}"
    set_fact:
      data_path: "/home/storage/{{pac}}/users/{{user}}/data"
    when: hdd_storage.stat.exists

  - name: configure ssd data directory path
    become: yes
    become_user: "{{pac}}-{{user}}"
    set_fact:
      data_path: "/home/pacs/{{pac}}/users/{{user}}/data"
    when: not hdd_storage.stat.exists

  ##################################
  ## other software configuration
  ##################################

  - name: upload redis configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/etc/redis.conf" src="templates/redis.conf" mode=0600

  - name: upload turnserver configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/etc/turnserver.conf" src="templates/turnserver.conf" mode=0600

  - name: upload monit configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.monitrc" src="templates/monitrc" mode=0600

  - name: upload logrotate configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.logrotate" src="templates/logrotate" mode=0600

  ########################################
  ## finish installation and install apps
  ########################################
  - name: finish nextcloud installation
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      # see https://docs.nextcloud.com/server/latest/admin_manual/installation/command_line_installation.html
      php occ maintenance:install --database "{{dbms}}" --database-name "{{pac}}_{{user}}" --database-user "{{pac}}_{{user}}" --database-pass "{{password}}" --admin-user "{{adminuser}}" --admin-pass "{{adminpassword}}" --data-dir "{{data_path}}"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/nextcloud"
      creates: "/home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php"

  - name: install default apps
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      # see https://docs.nextcloud.com/server/19/admin_manual/configuration_server/occ_command.html#apps-commands-label
      php -d memory_limit=512M ./occ app:install {{item}}
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/nextcloud"
      creates: "/home/pacs/{{pac}}/users/{{user}}/nextcloud/apps/{{item}}"
    loop: "{{ ['richdocuments', 'contacts', 'calendar', 'mail', 'spreed', 'groupfolders', 'twofactor_totp'] }}"

  - name: install local office
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      php -d memory_limit=512M ./occ app:install richdocumentscode
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/nextcloud"
      creates: "/home/pacs/{{pac}}/users/{{user}}/nextcloud/apps/richdocumentscode"
    when: with_local_office == True

  - name: set wopi_url for Nextcloud Office
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      # see https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/occ_command.html#config-commands
      php occ config:app:set --value "{{wopi_url}}" richdocuments wopi_url || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/nextcloud"
    when: wopi_url is defined

  ##########################
  ## nextcloud configuration
  ##########################
  - name: set the trusted domain
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php
      regexp: "^.*0 => 'localhost',$"
      line: "    0 => 'localhost', 1 => '{{domain}}',"
    when: domain == custom_domain

  - name: set the trusted domain with custom_domain
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php
      regexp: "^.*0 => 'localhost',$"
      line: "    0 => 'localhost', 1 => '{{custom_domain}}',"
    when: domain != custom_domain

  - name: set the host for the custom_domain
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php
      regexp: "^.*'overwritehost' =>.*,$"
      line: "  'overwritehost' => '{{custom_domain}}',"
      insertbefore: '^\)\;'
    when: domain != custom_domain

  - name: set the host for the trusted_proxies
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php
      regexp: "^.*'trusted_proxies' =>.*,$"
      line: "  'trusted_proxies' => array (0 => '{{custom_domain}}',),"
      insertbefore: '^\)\;'
    when: domain != custom_domain

  - name: configure redis for nextcloud
    become: yes
    become_user: "{{pac}}-{{user}}"
    blockinfile:
      path: "/home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php"
      insertbefore: '^\)\;'
      block: |2
          'memcache.local' => '\\OC\\Memcache\\Redis',
          'memcache.distributed' => '\\OC\\Memcache\\Redis',
          'memcache.locking' => '\\OC\\Memcache\\Redis',
          'redis' =>
          array (
            'host' => '/home/pacs/{{pac}}/users/{{user}}/var/run/redis-server.sock',
            'port' => 0,
            'password' => '{{redispassword}}',
            'timeout' => 1.5,
          ),

  - name: configure default_phone_region
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php
      regexp: "^.*'default_phone_region' =>.*,$"
      line: "  'default_phone_region' => '{{default_phone_region}}',"
      insertbefore: '^\)\;'
    when: default_phone_region is defined

  - name: configure skeletondirectory
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php
      regexp: "^.*'skeletondirectory' =>.*,$"
      line: "  'skeletondirectory' => '',"
      insertbefore: '^\)\;'
    when: empty_skeleton_directory is defined and empty_skeleton_directory == True

  - name: configure updater.server.url
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php
      regexp: "^.*'updater.server.url' =>.*,$"
      line: "  'updater.server.url' => '{{updater_server_url}}',"
      insertbefore: '^\)\;'
    when: updater_server_url is defined

  - name: configure hdd data directory
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: "/home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php"
      regexp: "^.*'datadirectory' => '.*',$"
      line: "  'datadirectory' => '/home/storage/{{pac}}/users/{{user}}/data',"
    when: hdd_storage.stat.exists

  - name: configure ssd data directory
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: "/home/pacs/{{pac}}/users/{{user}}/nextcloud/config/config.php"
      regexp: "^.*'datadirectory' => '.*',$"
      line: "  'datadirectory' => '/home/pacs/{{pac}}/users/{{user}}/data',"
    when: not hdd_storage.stat.exists

  ########################
  ## setup the apache site
  ########################
  - name: Check for htdocs-ssl directory
    become: yes
    become_user: "{{pac}}-{{user}}"
    stat:
      path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
    register: htdocsssl
  - name: drop htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
       state: absent
    when: htdocsssl.stat.exists and htdocsssl.stat.isdir
  - name: create symbolic link for htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/nextcloud"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
      state: link
  - name: upload .htaccess file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/htaccess"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/.htaccess"
  - name: upload php.ini file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/php.ini"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/fastcgi-ssl/php.ini"

  ######################
  ## upload sql script
  ######################
  - name: upload sql script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/sql.sh" src="templates/sql.sh" mode=0700

  - name: upload database backup script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/backup.sh" src="templates/backup.sh" mode=0700

  - name: upload mysql configuration file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.my.cnf" src="templates/my.cnf" mode=0600

  ####################################
  ## install cron jobs
  ####################################
  - name: start monit as cronjob
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "start monit at reboot"
      special_time: reboot
      job: rm -f $HOME/var/run/* && /usr/bin/monit -c "$HOME/.monitrc"
  - name: run logrotate once a day
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "logrotate"
      minute: "27"
      hour: "1"
      job: "/usr/sbin/logrotate -s $HOME/.logrotate.state $HOME/.logrotate"
  - name: run nextcloud cronjob
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "nextcloud"
      minute: "*/5"
      job: "/usr/bin/php $HOME/nextcloud/cron.php"
  - name: update all nextcloud apps each night
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "nextcloud app updates"
      hour: "1"
      minute: "12"
      job: "/usr/bin/php $HOME/nextcloud/occ app:update --all -n --no-ansi"
  - name: backup the database
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "database backup"
      hour: "1"
      minute: "23"
      job: "$HOME/bin/backup.sh"

  ##############################################
  ## start the redis and turn services via monit
  ##############################################
  - name: start monit
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      /usr/bin/monit -c ".monitrc"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/var/run/monit.id"
